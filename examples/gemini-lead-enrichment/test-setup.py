#!/usr/bin/env python3
"""
Teste de importa√ß√µes e conectividade
"""

import sys
import os

def test_imports():
    """Testa todas as importa√ß√µes necess√°rias"""
    try:
        print("üß™ Testando importa√ß√µes...")
        
        # Teste b√°sico
        import requests
        print("‚úÖ requests: OK")
        
        import json
        print("‚úÖ json: OK")
        
        # Teste dotenv
        from dotenv import load_dotenv
        print("‚úÖ python-dotenv: OK")
        
        # Teste Flask
        from flask import Flask
        print("‚úÖ flask: OK")
        
        # Teste Google Generative AI
        import google.generativeai as genai
        print("‚úÖ google-generativeai: OK")
        
        print("\nüéâ Todas as importa√ß√µes funcionando!")
        return True
        
    except ImportError as e:
        print(f"‚ùå Erro de importa√ß√£o: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return False

def test_gemini_connection():
    """Testa conex√£o com Gemini"""
    try:
        api_key = os.getenv('GEMINI_API_KEY')
        if not api_key:
            print("‚ö†Ô∏è  GEMINI_API_KEY n√£o configurada - pulando teste de conex√£o")
            return True
            
        import google.generativeai as genai
        genai.configure(api_key=api_key)
        
        model = genai.GenerativeModel("gemini-1.5-pro")
        response = model.generate_content("Responda apenas: OK")
        
        if "OK" in response.text:
            print("‚úÖ Conex√£o com Gemini: OK")
            return True
        else:
            print("‚ö†Ô∏è  Conex√£o com Gemini: Resposta inesperada")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro na conex√£o com Gemini: {e}")
        return False

def test_firecrawl_internal():
    """Testa conex√£o interna com Firecrawl"""
    try:
        import requests
        
        # Tentar conectar com URL interna
        internal_url = os.getenv('FIRECRAWL_INTERNAL_URL', 'http://api:3002')
        response = requests.get(f"{internal_url}/test", timeout=5)
        
        if response.status_code == 200:
            print("‚úÖ Conex√£o interna Firecrawl: OK")
            return True
        else:
            print(f"‚ö†Ô∏è  Conex√£o interna Firecrawl: Status {response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ö†Ô∏è  Conex√£o interna Firecrawl: N√£o dispon√≠vel (normal durante build)")
        return True
    except Exception as e:
        print(f"‚ùå Erro na conex√£o interna: {e}")
        return False

if __name__ == "__main__":
    print("üîß Diagn√≥stico do Lead Enrichment Service")
    print("=" * 50)
    
    # Carregar vari√°veis de ambiente
    from dotenv import load_dotenv
    load_dotenv()
    
    all_passed = True
    
    # Teste de importa√ß√µes
    if not test_imports():
        all_passed = False
    
    print()
    
    # Teste de conex√£o Gemini
    if not test_gemini_connection():
        all_passed = False
    
    print()
    
    # Teste de conex√£o Firecrawl
    if not test_firecrawl_internal():
        all_passed = False
    
    print("\n" + "=" * 50)
    
    if all_passed:
        print("üéâ Todos os testes passaram!")
        sys.exit(0)
    else:
        print("‚ùå Alguns testes falharam")
        sys.exit(1)
